

/* ///////////////////////////////////////////////////////////////////
            ----- Deprecated code  -----
  ///////////////////////////////////////////////////////////////// */

/*

--> Controller.js

  // DEPRECATED !!! Same function as readFileAndIncludeAndRenderBySpecies but
  // render directly in Controller.njs script (instead of render inside Views.njs script)
  function readFileAndIncludeAndRenderBySpeciesHere(templateFilePath,msg,MongoAttribute,MongoValue) {
    console.log('readFileAndIncludeAndRenderBySpecies'); //debug
    fs.readFile(templateFilePath, function (errors, contents) {
      if(errors) {
        console.log(errors);
        send500(`readFileAndIncludeAndRenderBySpeciesHere : Error getting the file ${templateFilePath} : ${errors}.`);
        throw errors;
      } else {
        model.filterByAttribute(MongoAttribute,MongoValue, function(result) {
          template.set(contents, function(errors,contents) // templatesJS {
            if(errors) {
              throw errors;
            } else {
              var JSONstring = result // from model SucessCallback
              var list = // list of variables that needed to be rendered dynamically {
                datatablesJSON : JSON.stringify(JSONstring),
                JSONlen : Object.keys(result).length
              }
              template.renderAll(list, function(err,contents) {
                if(err) {
                  throw err;
                } else {
                  res.writeHead(msg,{'Content-Type': 'text/html','Cache-Control': 'no-cache'});
                  res.end(contents);
                }
              })
            }
          })
        });
      }
    });
  }
   function processpost2(req, res) {
    if (req.method === 'POST') {
      let jsonString = '';
      const reqUtf = req.setEncoding('utf8'); // utf-8 encoding POST request
      console.log('processpost2 started');
      reqUtf.on('data', (data) => {
        jsonString += data;
      });
      reqUtf.on('end', function () {
        console.log(JSON.parse(jsonString));
      });
    }
  }

  --> Client-side genome DataTables
   //CLIENT SIDE zip and download
        /*var currentDate = new Date(Date.now()).toLocaleString();
        var count = table.rows( { selected: true } ).count(); // number of selected rows
        var toDownload=[];
        var zip = new JSZip();
        // Add an top-level, arbitrary text file with contents
        //zip.file("Readme", "Here you can find the files downloaded from GAMeR genomic database at : "+currentDate);  
        // Generate a directory within the Zip file structure
        var allfiles = zip.folder("Strains");
        allfiles.file("Readme", "Here you can find the files downloaded from GAMeR genomic database at : "+currentDate);
        for (var i=0 ; i<count ; i ++)
        {
            toDownload.push(table.rows( { selected: true } ).data({ selected: true })[i].Genome.Contigs)
        }
        var dldata=[]
        var promise=[]
        for (var i=0 ; i<count ; i ++)
        {
            var fileTypeList=[
            'Reads.FASTQC_pair1',
            'Reads.FASTQC_pair2',
            'Reads.VCF',
            'Genome.Contigs',
            'Genome.Assembly',
            'Genome.QUAST',
            'Genome.GFF',
            'Genome.GBK',
            'Report']

            dldata[i]=table.rows( { selected: true } ).data({ selected: true })[i].Genome.GFF
            //Force synchronous Download 
            promise[i] = $.get({url: dldata[i],
                                async:false}
                               );
            //sleep(300)
            // Add a file to the directory, in this case an image with data URI as contents
            allfiles.file(dldata[i],promise[i]);
            console.log(dldata[i])                
        }                
        // Generate the zip file asynchronously
        console.log("generatesync")
        allfiles.generateAsync({
            type: "blob",
            compression: "STORE",
            streamFiles:true,
            //compressionOptions: {
            //    level: 1
            //}
        }).then(function(blob) {
            // Force down of the Zip file
            saveAs(blob, "Strains_data.zip");
        });*/ 
*/